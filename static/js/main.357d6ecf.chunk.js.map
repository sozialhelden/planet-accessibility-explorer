{"version":3,"sources":["components/core/BlueprintDarkModeContainer.tsx","components/core/composeContexts.tsx","components/feature/details/ExternalFeatureLink.tsx","components/feature/details/FeatureAddress.tsx","components/feature/details/isAccessibilityRelevantOSMKey.tsx","components/feature/details/isAddressRelevantOSMKey.tsx","components/feature/details/OSMTagTable.tsx","components/feature/details/WikidataEntityImage.tsx","components/feature/details/WikimediaCommonsImage.tsx","components/feature/details/WikipediaLink.tsx","components/feature/details/FeatureDetails.tsx","model/Feature.ts","model/getFeatureDisplayName.ts","model/getFeatureCategoryDisplayName.ts","components/feature/FeatureListPopup.tsx","components/OverflowScrollContainer.tsx","components/map/filterLayers.tsx","components/map/useMapStyle.tsx","components/map/MapView.tsx","components/feature/getFeatureIdsFromLocation.ts","components/App.tsx","components/hooks/useGlobalHotkeys.tsx","reportWebVitals.ts","index.tsx"],"names":["getDarkModeSetting","window","matchMedia","matches","BlueprintDarkModeContainer","props","isDarkMode","React","setIsDarkMode","handleChange","e","undefined","addEventListener","useDarkMode","className","children","composeContexts","contextAndValuePairs","reduce","acc","Context","value","Provider","ExternalFeatureLink","LIST_UNSTYLED","rel","target","href","FeatureAddress","feature","intersperse","compact","map","k","key","properties","accessibilityPrefixes","Set","isAccessibilityRelevantOSMKey","osmKey","has","substr","indexOf","isAddressRelevantOSMKey","StyledTable","styled","OSMTagTable","HTML_TABLE","HTML_TABLE_STRIPED","HTML_TABLE_CONDENSED","join","keys","fetcher","url","fetch","then","r","json","WikidataEntityImage","prefix","entityId","encodeURIComponent","verb","data","error","useSWR","results","bindings","o","logoUrl","replace","omit","src","style","width","WikimediaCommonsImage","iri","fileName","match","alt","WikipediaLink","rest","lemmaWithLanguagePrefix","language","lemma","split","input","init","res","Skeleton","omittedKeyPrefixes","FeatureDetails","featureId","source","id","intent","JSON","stringify","filteredKeys","Object","sort","a","b","startsWith","filter","find","accessibilityRelevantKeys","addressRelevantKeys","remainingKeys","difference","osmType","geometry","type","_id","osmId","displayName","ownName","name","loc_name","description","ref","getFeatureDisplayName","categoryName","keysWithKeyAsSuffix","keysWithoutKeyAsSuffix","humanize","note","getFeatureCategoryDisplayName","imageStyle","margin","gap","maxWidth","display","flexDirection","justifyContent","fontWeight","image","centroid","coordinates","FeatureListPopup","featureIds","uniquefeatureIds","uniqBy","f","content","latitude","longitude","closeButton","closeOnClick","onClose","anchor","OverflowScrollContainer","div","databaseTableNames","useMapStyle","process","loading","ZoomToDataOnLoad","MapContext","MapView","containerRef","height","useMeasure","mapRef","useRef","history","useHistory","location","useLocation","pathname","featureIdString","uniq","s","getFeatureIdsFromLocation","query","URLSearchParams","search","get","viewport","setViewport","useState","parseFloat","zoom","useLayoutEffect","newViewport","handleMapClick","useCallback","event","console","log","selectedFeatureCount","features","length","push","lngLat","closePopup","setViewportCallback","viewState","interactionState","mapStyle","layers","layer","tableName","filterLayers","flex","visible","position","mapboxApiAccessToken","onViewportChange","interactiveLayerIds","l","onClick","tiles","Number","right","top","mapboxgl","workerClass","require","default","FocusStyleManager","onlyShowFocusOnTabs","AppBody","App","contexts","onSelectFeature","mapView","navbarAndBody","hotkeys","useMemo","combo","global","label","onKeyDown","alert","allowInInput","preventDefault","handleKeyDown","handleKeyUp","onKeyUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dotenv","config","enableAllPlugins","enablePatches","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"4VAGA,SAASA,IACP,OACEC,OAAOC,YACPD,OAAOC,WAAW,gCAAgCC,QAkCvC,SAASC,EAA2BC,GACjD,IAAMC,EA3BD,WAAwB,IAAD,EACQC,WAAeP,KADvB,mBACrBM,EADqB,KACTE,EADS,KAGtBC,EAAeF,eAAkB,SAACG,GACtCF,EAAcR,OACb,IAWH,OATAO,aAAgB,gBACYI,IAAtBV,OAAOC,YAGXD,OACGC,WAAW,gCACXU,iBAAiB,SAAUH,KAC7B,CAACA,IAEGH,EAWYO,GACnB,OACE,+CACMR,GADN,IAEES,UAAWR,EAAU,UAAMD,EAAMS,UAAZ,aAAmCT,EAAMS,UAFhE,SAIGT,EAAMU,YC3Bb,IAWeC,EAXS,SACtBC,EACAF,GAFsB,OAItBE,EAAqBC,QACnB,SAACC,EAAD,GAAmE,IAAD,mBAA1CC,EAA0C,KAAjCC,EAAiC,KAChE,OAAO,cAACD,EAAQE,SAAT,CAAkBD,MAAOA,EAAzB,SAAiCF,MAE1CJ,I,kFC1BW,SAASQ,EAAoBlB,GAI1C,OACE,oBAAIS,UAAWU,gBAAf,SACE,mBAAGC,IAAI,aAAaC,OAAO,SAASC,KAAMtB,EAAMsB,KAAhD,SACGtB,EAAMU,a,sBCDA,SAASa,EAAevB,GACrC,MAAM,QAAEwB,GAAYxB,EAYpB,OACE,kCACGyB,IACCC,kBAdO,CACX,SACA,cACA,QACA,WACA,OACA,SACA,SACA,QACA,WAOSC,KAAKC,GAAO,QAAOA,MACnBD,KACEE,GACCL,EAAQM,WAAWD,IACjB,+BAAOL,EAAQM,WAAWD,QAIpC,yCC9BD,MAAME,EAAwB,IAAIC,IAAI,CAC3C,SACA,WACA,mBACA,WACA,iBACA,UACA,UACA,QACA,oBACA,UACA,kBACA,WACA,aACA,iBACA,SACA,WACA,WACA,OACA,WACA,sBACA,OACA,WACA,aACA,MACA,OACA,iBACA,WACA,mBACA,YACA,WACA,MACA,SACA,WACA,OACA,MACA,WACA,SACA,cACA,kBACA,OACA,UACA,QACA,QACA,MACA,WACA,OACA,WACA,UACA,UACA,gBACA,kBACA,UACA,UACA,OACA,mBACA,cACA,OACA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","file":"static/js/main.357d6ecf.chunk.js","sourcesContent":["import { HTMLDivProps } from \"@blueprintjs/core\";\nimport * as React from \"react\";\n\nfunction getDarkModeSetting(): boolean {\n  return (\n    window.matchMedia &&\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n  );\n}\n\n/**\n * A React Hook returning a boolean value that is `true` when the user switched on dark mode,\n * `false` otherwise.\n */\nexport function useDarkMode() {\n  const [isDarkMode, setIsDarkMode] = React.useState(getDarkModeSetting());\n\n  const handleChange = React.useCallback((e) => {\n    setIsDarkMode(getDarkModeSetting());\n  }, []);\n\n  React.useEffect(() => {\n    if (window.matchMedia === undefined) {\n      return;\n    }\n    window\n      .matchMedia(\"(prefers-color-scheme: dark)\")\n      .addEventListener(\"change\", handleChange);\n  }, [handleChange]);\n\n  return isDarkMode;\n}\n\n/**\n * A React component wrapper with a Blueprint CSS class that controls if the container's children\n * are rendered in dark-mode style or not.\n *\n * Wrap your Blueprint.js components in this React component to adapt them to the user's dark mode\n * setting automatically.\n */\nexport default function BlueprintDarkModeContainer(props: HTMLDivProps) {\n  const isDarkMode = useDarkMode();\n  return (\n    <div\n      {...props}\n      className={isDarkMode ? `${props.className} bp3-dark` : props.className}\n    >\n      {props.children}\n    </div>\n  );\n}\n","export type ContextAndValue<T> = [React.Context<T>, T];\n\n/**\n * This function allows you to render a React component with multiple nested React contexts around\n * it, but makes the code doing that more readable.\n *\n * @param contextAndValuePairs an array of [context ref, context value] entries.\n * @param children the react children to render.\n * @example\n * ```jsx\n * const contexts: ContextAndValue<any>[] = [\n *    [SomeContext, someValue],\n *    [UndoContext, undoContext]\n * ];\n * return <div>\n *   {composeContexts(contexts, navbarAndBody)}\n * </div>;\n * ```\n */\n\nconst composeContexts = (\n  contextAndValuePairs: ContextAndValue<any>[],\n  children: React.ReactNode\n) =>\n  contextAndValuePairs.reduce(\n    (acc: React.ReactNode, [Context, value]: ContextAndValue<any>) => {\n      return <Context.Provider value={value}>{acc}</Context.Provider>;\n    },\n    children\n  );\n\nexport default composeContexts;\n","import { LIST_UNSTYLED } from \"@blueprintjs/core/lib/esm/common/classes\";\n\nexport default function ExternalFeatureLink(props: {\n  href: string;\n  children?: React.ReactNode;\n}) {\n  return (\n    <li className={LIST_UNSTYLED}>\n      <a rel=\"noreferrer\" target=\"_blank\" href={props.href}>\n        {props.children}\n      </a>\n    </li>\n  );\n}\n","import intersperse from \"intersperse\";\nimport { compact } from \"lodash\";\nimport Feature from \"../../../model/Feature\";\n\ntype Props = {\n  feature: Feature;\n};\n\nexport default function FeatureAddress(props: Props) {\n  const { feature } = props;\n  const keys = [\n    \"street\",\n    \"housenumber\",\n    \"place\",\n    \"postcode\",\n    \"city\",\n    \"suburb\",\n    \"county\",\n    \"state\",\n    \"country\",\n  ];\n  return (\n    <address>\n      {intersperse(\n        compact(\n          keys\n            .map((k) => `addr:${k}`)\n            .map(\n              (key) =>\n                feature.properties[key] && (\n                  <span>{feature.properties[key]}</span>\n                )\n            )\n        ),\n        <span>, </span>\n      )}\n    </address>\n  );\n}\n","/**\n * Takes a list of OSM keys, and returns a Set of the keys that are relevant for accessibility.\n */\n\nexport const accessibilityPrefixes = new Set([\n  \"access\",\n  \"acoustic\",\n  \"air_conditioning\",\n  \"amperage\",\n  \"automatic_door\",\n  \"barrier\",\n  \"bicycle\",\n  \"blind\",\n  \"blind:description\",\n  \"braille\",\n  \"building:levels\",\n  \"capacity\",\n  \"centralkey\",\n  \"changing_table\",\n  \"charge\",\n  \"crossing\",\n  \"cycleway\",\n  \"deaf\",\n  \"delivery\",\n  \"description:payment\",\n  \"diet\",\n  \"disabled\",\n  \"dispensing\",\n  \"dog\",\n  \"door\",\n  \"drinking_water\",\n  \"elevator\",\n  \"embossed_letters\",\n  \"emergency\",\n  \"entrance\",\n  \"fee\",\n  \"female\",\n  \"floating\",\n  \"foot\",\n  \"gay\",\n  \"handrail\",\n  \"indoor\",\n  \"information\",\n  \"internet_access\",\n  \"kerb\",\n  \"lesbian\",\n  \"level\",\n  \"lgbtq\",\n  \"lit\",\n  \"location\",\n  \"male\",\n  \"material\",\n  \"max_age\",\n  \"min_age\",\n  \"opening_hours\",\n  \"outdoor_seating\",\n  \"parking\",\n  \"payment\",\n  \"ramp\",\n  \"represented_date\",\n  \"reservation\",\n  \"room\",\n  \"scale\",\n  \"self_service\",\n  \"sidewalk\",\n  \"sloped_curb\",\n  \"smoking\",\n  \"smoothness\",\n  \"socket\",\n  \"speech_output\",\n  \"step_count\",\n  \"stroller\",\n  \"surface\",\n  \"surveillance\",\n  \"tactile_paving\",\n  \"tactile_writing\",\n  \"takeaway\",\n  \"toilet\",\n  \"toilets\",\n  \"traffic_signals\",\n  \"unisex\",\n  \"voice_description\",\n  \"voltage\",\n  \"wheelchair\",\n  \"wheelchair:description\",\n  \"width\",\n  \"winter_service\",\n]);\n\nexport default function isAccessibilityRelevantOSMKey(osmKey: string): boolean {\n  return (\n    accessibilityPrefixes.has(osmKey) ||\n    accessibilityPrefixes.has(osmKey.substr(0, osmKey.indexOf(\":\")))\n  );\n}\n","/**\n * Takes a list of OSM keys, and returns a Set of the keys that are relevant for accessibility.\n */\n\nexport const accessibilityPrefixes = new Set([\"addr\"]);\n\nexport default function isAddressRelevantOSMKey(osmKey: string): boolean {\n  return (\n    accessibilityPrefixes.has(osmKey) ||\n    accessibilityPrefixes.has(osmKey.substr(0, osmKey.indexOf(\":\")))\n  );\n}\n","import {\n  HTML_TABLE,\n  HTML_TABLE_CONDENSED,\n  HTML_TABLE_STRIPED,\n} from \"@blueprintjs/core/lib/esm/common/classes\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Feature from \"../../../model/Feature\";\n\nconst StyledTable = styled(\"table\")`\n  background-color: rgba(0, 0, 0, 0.05);\n  margin: 1rem 0;\n`;\n\nexport default function OSMTagTable(props: {\n  keys: string[];\n  feature: Feature;\n}) {\n  return (\n    <StyledTable\n      className={[HTML_TABLE, HTML_TABLE_STRIPED, HTML_TABLE_CONDENSED].join(\n        \" \"\n      )}\n    >\n      {props.keys.map((k) => (\n        <tr key={k}>\n          <th>{k}</th>\n          <td>{props.feature.properties[k]}</td>\n        </tr>\n      ))}\n    </StyledTable>\n  );\n}\n","import { omit } from \"lodash\";\nimport { HTMLAttributes } from \"react\";\nimport useSWR from \"swr\";\nimport Feature from \"../../../model/Feature\";\n\nconst fetcher = (url: string) => fetch(url).then((r) => r.json());\n\ntype Props = HTMLAttributes<HTMLImageElement> & {\n  feature: Feature;\n  prefix?: string;\n  verb: string;\n};\n\n/**\n * Renders a React component that loads brand info from the Wikidata API (with SWR) and displays the\n * brand logo.\n */\nexport default function WikidataEntityImage(props: Props) {\n  const {\n    [props.prefix ? `${props.prefix}:wikidata` : \"wikidata\"]: entityId,\n  } = props.feature.properties;\n  const url = `https://query.wikidata.org/sparql?query=SELECT%20%3Fo%0AWHERE%20%7B%0A%20%20%20%20wd%3A${encodeURIComponent(\n    entityId\n  )}%20wdt%3A${props.verb}%20%3Fo.%0A%7D&format=json`;\n  const { data, error } = useSWR(entityId ? url : null, fetcher);\n  if (error) return null;\n  if (!data) return null;\n  try {\n    const { results } = data;\n    const { bindings } = results;\n    const { o } = bindings[0];\n    const { value } = o;\n    const logoUrl = `${value.replace(/^http:/, \"https:\")}?width=200`;\n\n    const image = ( // eslint-disable-next-line jsx-a11y/alt-text\n      <img\n        {...omit(props, \"feature\", \"prefix\", \"verb\")}\n        src={logoUrl}\n        style={{ ...props.style, width: 100 }}\n      />\n    );\n    return image;\n  } catch (e) {\n    return null;\n  }\n}\n","/**\n * Renders a React component that displays a Wikimedia Commons image with the given file name.\n */\n\nimport { omit } from \"lodash\";\n\ntype Props = React.HTMLAttributes<HTMLImageElement> & {\n  fileName: string;\n};\n\nexport default function WikimediaCommonsImage(props: Props) {\n  let url;\n  const regexp = /^(?:(?:https?)\\/\\/commons.wikimedia.org\\/wiki\\/)?File:(.*)/i;\n  const iri = props.fileName?.match(regexp)?.[0];\n  if (iri) {\n    url = `https://commons.wikimedia.org/wiki/Special:FilePath/${encodeURIComponent(\n      iri\n    )}?width=200`;\n  }\n  if (!url) {\n    return null;\n  }\n\n  return <img {...omit(props, \"fileName\")} src={url} alt={props.fileName} />;\n}\n","import { HTMLAttributes } from \"react\";\nimport Feature from \"../../../model/Feature\";\n\ntype Props = HTMLAttributes<HTMLAnchorElement> & {\n  feature: Feature;\n  prefix?: string;\n  children: React.ReactNode;\n};\n\n/** Renders a link to Wikipedia, using the [prefix]:wikipedia property of the given feature. */\n\nexport default function WikipediaLink({ feature, prefix, ...rest }: Props) {\n  const lemmaWithLanguagePrefix =\n    feature.properties[prefix ? `${prefix}:wikipedia` : \"wikipedia\"];\n  if (!lemmaWithLanguagePrefix) {\n    return null;\n  }\n\n  const [language, lemma] = lemmaWithLanguagePrefix.split(\":\");\n  if (language && lemma) {\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        href={`https://${language}.wikipedia.org/wiki/${lemma}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        {...rest}\n      />\n    );\n  }\n  return <>{rest.children}</>;\n}\n","import { Callout, Card, H2, UL } from \"@blueprintjs/core\";\nimport { LIST_UNSTYLED } from \"@blueprintjs/core/lib/esm/common/classes\";\nimport { difference } from \"lodash\";\nimport React from \"react\";\nimport useSWR from \"swr\";\nimport {\n  ErrorResponse,\n  FeatureId,\n  FeatureOrError,\n  isErrorResponse,\n} from \"../../../model/Feature\";\nimport getFeatureCategoryDisplayName from \"../../../model/getFeatureCategoryDisplayName\";\nimport getFeatureDisplayName from \"../../../model/getFeatureDisplayName\";\nimport ExternalFeatureLink from \"./ExternalFeatureLink\";\nimport FeatureAddress from \"./FeatureAddress\";\nimport isAccessibilityRelevantOSMKey from \"./isAccessibilityRelevantOSMKey\";\nimport isAddressRelevantOSMKey from \"./isAddressRelevantOSMKey\";\nimport OSMTagTable from \"./OSMTagTable\";\nimport WikidataEntityImage from \"./WikidataEntityImage\";\nimport WikimediaCommonsImage from \"./WikimediaCommonsImage\";\nimport WikipediaLink from \"./WikipediaLink\";\n\ntype Props = {\n  featureId: FeatureId;\n};\n\nconst fetcher = (input: RequestInfo, init?: RequestInit | undefined) =>\n  fetch(input, init).then((res) => res.json());\n\nfunction Skeleton() {\n  return <div className=\"bp3-skeleton\">Loading...</div>;\n}\n\nconst omittedKeyPrefixes = [\"type\", \"name\", \"area\"];\n\nexport default function FeatureDetails(props: Props) {\n  const { featureId } = props;\n  const url = `${process.env.REACT_APP_OSM_API_BACKEND_URL}/${featureId.source}/${featureId.id}.json`;\n\n  const { data, error } = useSWR<FeatureOrError, ErrorResponse>(url, fetcher);\n\n  if (error) return <Callout intent=\"danger\">{JSON.stringify(error)}</Callout>;\n\n  if (!data) return <Skeleton />;\n\n  if (isErrorResponse(data)) {\n    return <Callout intent=\"danger\">{JSON.stringify(data)}</Callout>;\n  }\n\n  const sortedKeys = Object.keys(data.properties)\n    .sort()\n    .sort((a, b) => {\n      if (a.startsWith(\"name\")) return -1;\n      if (b.startsWith(\"name\")) return 1;\n      return 0;\n    });\n\n  const filteredKeys = sortedKeys.filter(\n    (key) => !omittedKeyPrefixes.find((prefix) => key.startsWith(prefix))\n  );\n\n  const accessibilityRelevantKeys = filteredKeys.filter(\n    isAccessibilityRelevantOSMKey\n  );\n\n  const addressRelevantKeys = filteredKeys.filter(isAddressRelevantOSMKey);\n\n  const remainingKeys = difference(\n    filteredKeys,\n    accessibilityRelevantKeys,\n    addressRelevantKeys\n  );\n\n  const geometryType = data.geometry.type;\n  const osmType =\n    geometryType === \"Point\"\n      ? \"node\"\n      : data._id.startsWith(\"-\")\n      ? \"relation\"\n      : \"way\";\n  const osmId = data._id.replace(/^-/, \"\");\n  const displayName = getFeatureDisplayName(data);\n  const categoryName = getFeatureCategoryDisplayName(data);\n  const imageStyle = { margin: \"0 0 0 1rem\" };\n  return (\n    <Card style={{ gap: \"10px\", maxWidth: \"40rem\" }}>\n      <header\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div>\n          <H2>{displayName || categoryName}</H2>\n          {/* If there is no display name, the category name is already displayed above */}\n          {displayName && categoryName && (\n            <p style={{ fontWeight: \"bold\" }}>{categoryName}</p>\n          )}\n          {data.properties.description && <p>{data.properties.description}</p>}\n          <FeatureAddress feature={data} />\n        </div>\n        <div>\n          <WikipediaLink feature={data}>\n            <WikidataEntityImage feature={data} style={imageStyle} verb=\"P18\" />\n          </WikipediaLink>\n          <WikipediaLink feature={data} prefix=\"subject\">\n            <WikidataEntityImage\n              feature={data}\n              style={imageStyle}\n              prefix=\"subject\"\n              verb=\"P18\"\n            />\n          </WikipediaLink>\n          <WikipediaLink feature={data} prefix=\"brand\">\n            <WikidataEntityImage\n              feature={data}\n              style={imageStyle}\n              prefix=\"brand\"\n              verb=\"P154\"\n            />\n          </WikipediaLink>\n          <WikimediaCommonsImage\n            fileName={data.properties.image}\n            style={imageStyle}\n          />\n        </div>\n      </header>\n\n      <OSMTagTable keys={accessibilityRelevantKeys} feature={data} />\n\n      <details>\n        <summary>See OpenStreetMap information</summary>\n        <h3>OSM tags</h3>\n        <OSMTagTable keys={remainingKeys} feature={data} />\n        <UL className={LIST_UNSTYLED}>\n          <ExternalFeatureLink\n            href={`https://openstreetmap.org/${osmType}/${osmId}`}\n          >\n            Open on OpenStreetMap\n          </ExternalFeatureLink>\n\n          {osmType !== \"relation\" && (\n            <ExternalFeatureLink\n              href={`https://wheelmap.org/nodes/${\n                osmType === \"way\" ? \"-\" : \"\"\n              }${osmId}`}\n            >\n              Open on Wheelmap\n            </ExternalFeatureLink>\n          )}\n\n          <ExternalFeatureLink\n            href={`https://www.openstreetmap.org/edit?${osmType}=${osmId}#map=19/${data.centroid.coordinates[1]}/${data.centroid.coordinates[0]}`}\n          >\n            Edit with ID Editor\n          </ExternalFeatureLink>\n\n          <ExternalFeatureLink\n            href={`${process.env.REACT_APP_OSM_API_BACKEND_URL}/${featureId.source}/${featureId.id}.geojson`}\n          >\n            Show GeoJSON\n          </ExternalFeatureLink>\n        </UL>\n      </details>\n    </Card>\n  );\n}\n","type Feature = {\n  _id: string;\n  geometry: { coordinates: any; type: \"Polygon\" | \"MultiPolygon\" | \"Point\" };\n  centroid: { coordinates: number[]; type: \"Point\" };\n  properties: Record<string, string>;\n  type: \"Feature\";\n  source: string;\n  sourceLayer: string;\n  error: never;\n};\n\nexport type ErrorResponse = {\n  _id: never;\n  error: string;\n};\n\nexport type FeatureOrError = Feature | ErrorResponse;\n\nexport function isErrorResponse(\n  featureOrError: FeatureOrError\n): featureOrError is ErrorResponse {\n  return featureOrError.error !== undefined;\n}\n\nexport type FeatureId = {\n  source: string;\n  id: string;\n};\n\nexport default Feature;\n","import Feature from \"./Feature\";\n\nexport default function getFeatureDisplayName(feature: Feature) {\n  const properties = feature.properties;\n  const ownName =\n    properties.name ||\n    properties.loc_name ||\n    properties.description ||\n    properties.ref;\n\n  if (ownName) {\n    return ownName;\n  }\n}\n","import { humanize } from \"inflection\";\nimport Feature from \"./Feature\";\n\nexport default function getFeatureCategoryDisplayName(feature: Feature) {\n  const properties = feature.properties;\n\n  const keysWithKeyAsSuffix = [\n    \"studio\",\n    \"office\",\n    \"shop\",\n    \"room\",\n    \"building\",\n    \"landuse\",\n    \"route\",\n  ];\n\n  const keysWithoutKeyAsSuffix = [\n    \"sport\",\n    \"leisure\",\n    \"tourism\",\n    \"shop\",\n    \"amenity\",\n    \"junction\",\n    \"railway\",\n    \"aeroway\",\n    \"man_made\",\n    \"highway\",\n  ];\n\n  for (const key of keysWithoutKeyAsSuffix) {\n    if (properties[key] && properties[key] !== \"yes\") {\n      return `${humanize(properties[key])} ${properties.ref || \"\"}`;\n    }\n  }\n\n  for (const key of keysWithKeyAsSuffix) {\n    if (properties[key] && properties[key] !== \"yes\") {\n      return `${humanize(properties[key])} ${key} ${properties.ref || \"\"}`;\n    }\n  }\n\n  for (const key of keysWithKeyAsSuffix) {\n    if (properties[key] === \"yes\") {\n      return (\n        properties.note ||\n        `${humanize(key)} ${properties.ref || properties.note || \"\"}`\n      );\n    }\n  }\n}\n","import { UL } from \"@blueprintjs/core\";\nimport { LIST_UNSTYLED } from \"@blueprintjs/core/lib/esm/common/classes\";\nimport { uniqBy } from \"lodash\";\nimport React from \"react\";\nimport { Popup } from \"react-map-gl\";\nimport { FeatureId } from \"../../model/Feature\";\nimport FeatureDetails from \"./details/FeatureDetails\";\n\ntype Props = {\n  featureIds: FeatureId[];\n  latitude: number;\n  longitude: number;\n  onClose?: () => void;\n};\n\nexport default function FeatureListPopup(props: Props) {\n  const { featureIds } = props;\n  const uniquefeatureIds = uniqBy(featureIds, (f) => f.id);\n  const content = (\n    <UL className={LIST_UNSTYLED}>\n      {uniquefeatureIds.map((featureId) => (\n        <li\n          className={LIST_UNSTYLED}\n          key={`${featureId.source}/${featureId.id}`}\n        >\n          <FeatureDetails featureId={featureId} />\n        </li>\n      ))}\n    </UL>\n  );\n\n  return (\n    <Popup\n      latitude={props.latitude}\n      longitude={props.longitude}\n      closeButton={true}\n      closeOnClick={false}\n      onClose={props.onClose}\n      anchor=\"top\"\n    >\n      {content}\n    </Popup>\n  );\n}\n","import styled from \"styled-components\";\n\nconst OverflowScrollContainer = styled.div`\n  overflow: auto;\n`;\n\nexport default OverflowScrollContainer;\n","export const databaseTableNames = [\n  \"admin\",\n  \"places\",\n  \"amenities\",\n  \"entrances_or_exits\",\n  \"elevators\",\n  \"ramps\",\n  \"pedestrian_highways\",\n  \"conveying\",\n  \"toilets\",\n  \"buildings\",\n  \"master_routes\",\n  \"master_route_members\",\n  \"routes\",\n  \"route_members\",\n  \"stop_areas\",\n  \"stop_area_members\",\n  \"platforms\",\n  \"stop_positions\",\n  \"stations\",\n];\n\n/**\n * Filter layers from a mapbox-gl stylesheet.\n *\n * Keep only layers that have an `id` matching a 'osm-' prefix, and change sources to match the\n * table names from our OSM database.\n *\n * @param layers The layers to filter\n */\nexport function filterLayers(layers: mapboxgl.Layer[]): mapboxgl.Layer[] {\n  return layers\n    .filter((layer) => layer.id?.startsWith(\"osm-\"))\n    .map((layer) => {\n      // In Mapbox Studio, layers have a source layer reference that uses a random string ID like\n      // 'entrances_or_exits_saarbrueck-0vxz2q'. We need to replace that with the actual table name,\n      // for example 'entrances_or_exits'.\n      const source = databaseTableNames.find((tableName) =>\n        layer[\"source-layer\"]?.startsWith(tableName)\n      );\n\n      return {\n        ...layer,\n        source,\n        \"source-layer\": \"default\",\n      };\n    })\n    .filter((layer) => layer.source);\n}\n","import useSWR from \"swr\";\n\nconst fetcher = (input: RequestInfo, init?: RequestInit | undefined) =>\n  fetch(input, init).then((res) => res.json());\n\nfunction useMapStyle() {\n  const styleId = process.env.REACT_APP_MAPBOX_STYLE_ID;\n  const accessToken = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n  const accountId = process.env.REACT_APP_MAPBOX_ACCOUNT_ID;\n\n  const url = `https://api.mapbox.com/styles/v1/${accountId}/${styleId}?fresh=true&access_token=${accessToken}`;\n\n  const { data, error } = useSWR<mapboxgl.Style, { error: any }>(url, fetcher);\n\n  if (error) return { error };\n  if (!data) return { loading: true };\n\n  return { data };\n}\n\nexport default useMapStyle;\n","import mapboxgl from \"mapbox-gl\";\nimport * as React from \"react\";\nimport { useCallback, useLayoutEffect, useRef, useState } from \"react\";\nimport ReactMapGL, {\n  Layer,\n  MapContext,\n  MapEvent,\n  MapRef,\n  NavigationControl,\n  Source,\n  ViewportProps,\n} from \"react-map-gl\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\nimport { useHistory, useLocation } from \"react-router\";\nimport useMeasure from \"react-use-measure\";\nimport FeatureListPopup from \"../feature/FeatureListPopup\";\nimport getFeatureIdsFromLocation from \"../feature/getFeatureIdsFromLocation\";\nimport OverflowScrollContainer from \"../OverflowScrollContainer\";\nimport { databaseTableNames, filterLayers } from \"./filterLayers\";\nimport useMapStyle from \"./useMapStyle\";\n\n// The following is required to stop \"npm build\" from transpiling mapbox code.\n// notice the exclamation point in the import.\n// @ts-ignore\n// eslint-disable-next-line import/no-webpack-loader-syntax, import/no-unresolved\nmapboxgl.workerClass = require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\n\ninterface IProps {\n  featureId?: string;\n  onSelectFeature: (_id: string) => void;\n  className?: string;\n  timestamp?: number;\n  visible?: boolean;\n  children?: React.ReactNode;\n}\n\nfunction ZoomToDataOnLoad() {\n  const mapContext = React.useContext(MapContext);\n\n  if (mapContext.map) {\n    // do something\n  }\n  return null;\n}\n\nexport default function MapView(props: IProps) {\n  const [containerRef, { width, height }] = useMeasure();\n  const mapRef = useRef<MapRef>(null);\n\n  const history = useHistory();\n  const location = useLocation();\n  const featureIds = getFeatureIdsFromLocation(location);\n  const query = new URLSearchParams(location.search);\n  const latitude = query.get(\"lat\");\n  const longitude = query.get(\"lon\");\n\n  const [viewport, setViewport] = useState<\n    Partial<ViewportProps> & { width: number; height: number }\n  >({\n    width: 100,\n    height: 100,\n    latitude: (latitude && parseFloat(latitude)) || 52.5,\n    longitude: (longitude && parseFloat(longitude)) || 13.3,\n    zoom: latitude && longitude ? 18 : 10,\n  });\n\n  // Pan to feature boundary if no single feature is selected and the source is loaded for the first time\n  // useEffect(() => {\n  //   if (feature) {\n  //     return;\n  //   }\n\n  //   const map = mapRef.current?.getMap() as Map;\n  //   if (!map) {\n  //     return;\n  //   }\n\n  //   map.once('idle', () => {\n  //     const features = map.querySourceFeatures('features');\n  //     const bounds = new LngLatBounds();\n  //     features\n  //       .filter(f => f.geometry?.coordinates)\n  //       .forEach(feature => bounds.extend(feature.geometry.coordinates));\n  //     if (bounds.isEmpty()) {\n  //       return;\n  //     }\n  //     const northWest = bounds.getNorthWest();\n  //     const southEast = bounds.getSouthEast();\n  //     if (!northWest || !southEast) {\n  //       return;\n  //     }\n  //     if (northWest.distanceTo(southEast) === 0) {\n  //       map.setCenter(bounds.getNorthEast());\n  //     } else {\n  //       map.fitBounds(bounds.toArray() as LngLatBoundsLike, { padding: 100, maxDuration: 0 });\n  //     }\n  //     map.once('idle', () => {\n  //       const newMapCenter = map.getCenter();\n  //       setViewport({ ...viewport, zoom: map.getZoom(), latitude: newMapCenter.lat, longitude: newMapCenter.lng });\n  //     });\n  //   });\n\n  //   // const newViewport = {\n  //   //   ...viewport,\n  //   //   latitude: feature?.geometry.coordinates?.[1],\n  //   //   longitude: feature?.geometry.coordinates?.[0],\n  //   //   zoom: Math.max(10, viewport.zoom || 10),\n  //   // };\n\n  //   // setViewport(newViewport);\n  // }, [mapRef.current]);\n\n  // Pan to single selected map feature, if it exists or changes\n  // useEffect(() => {\n  //   if (!feature || !feature.geometry) {\n  //     return;\n  //   }\n\n  //   const map = mapRef.current?.getMap() as Map;\n  //   if (!map) {\n  //     return;\n  //   }\n  //   const bounds = map.getBounds();\n  //   if (\n  //     viewport?.zoom &&\n  //     viewport?.zoom >= 10 &&\n  //     bounds &&\n  //     bounds.contains(feature.geometry.coordinates)\n  //   ) {\n  //     return;\n  //   }\n\n  //   const newViewport = {\n  //     ...viewport,\n  //     latitude: feature?.geometry.coordinates?.[1],\n  //     longitude: feature?.geometry.coordinates?.[0],\n  //     zoom: Math.max(10, viewport.zoom || 10),\n  //     pitch: 50,\n  //   };\n\n  //   setViewport(newViewport);\n  // }, [mapRef.current, feature?.geometry?.coordinates[0], feature?.geometry?.coordinates[1]]);\n\n  // Reset viewport when map size changes\n  useLayoutEffect(() => {\n    const newViewport = { ...viewport, width, height };\n    setViewport(newViewport);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width, height]);\n\n  // const featureLayer = useMemo(() => {\n  //   return generateSelectedFeatureLayer(props.featureId);\n  // }, [props.featureId]);\n\n  // const featureDetailsLayer = useMemo(() => {\n  //   return generateFeatureDetailsLayer(props.featureId);\n  // }, [props.featureId]);\n\n  // const unclusteredPointLabelLayer = useMemo(() => {\n  //   return generateUnclusteredPointLabelLayer(lastImportType, languageTagsStrings, props.featureId);\n  // }, [lastImportType, props.featureId]);\n\n  const handleMapClick = useCallback<(event: MapEvent) => void>(\n    (event) => {\n      console.log(event);\n\n      const selectedFeatureCount = event?.features?.length;\n      if (!selectedFeatureCount) {\n        // Clicked outside of a clickable map feature\n        history.push(\"/\");\n      }\n\n      if (selectedFeatureCount === 1) {\n        const feature = event.features?.[0];\n        // Show source overview again if user just clicks/taps on the map\n        feature &&\n          history.push(\n            `/${feature.source}/${feature.properties.id}?lon=${event.lngLat[0]}&lat=${event.lngLat[1]}`\n          );\n        return;\n      }\n\n      history.push(\n        `/composite/${event.features\n          ?.map((f) => [f.source, f.properties.id].join(\":\"))\n          .join(\",\")}?lon=${event.lngLat[0]}&lat=${event.lngLat[1]}`\n      );\n      return;\n    },\n    [history]\n  );\n\n  const closePopup = useCallback(() => {\n    history.push(`/`);\n  }, [history]);\n\n  const setViewportCallback = useCallback(\n    (viewState, interactionState) => {\n      // console.log('Setting viewport because of callback:', viewState, interactionState);\n      setViewport({ ...viewport, ...viewState });\n    },\n    [setViewport, viewport]\n  );\n\n  // const onLoadCallback = useCallback(() => {\n  // const map = mapRef.current?.getMap();\n  // }, [mapRef.current]);\n\n  const mapStyle = useMapStyle();\n  const layers = React.useMemo(\n    () => mapStyle.data?.layers && filterLayers(mapStyle.data?.layers),\n    [mapStyle]\n  );\n\n  return (\n    // Container needs to hide overflow because it's used for measurement.\n    // Without hiding overflowing content, it would adapt its own size to its overflowing content\n    // size on reducing its size while resizing the viewport, so it would only grow bigger, never\n    // shrink.\n    <OverflowScrollContainer\n      ref={containerRef}\n      className={props.className}\n      style={{\n        flex: 1,\n        display: props.visible === false ? \"none\" : \"block\",\n        position: \"relative\",\n      }}\n    >\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n        onViewportChange={setViewportCallback}\n        interactiveLayerIds={mapStyle.data?.layers\n          ?.map((l) => l.id)\n          .filter((id) => id.startsWith(\"osm-\"))}\n        onClick={handleMapClick}\n        // onLoad={onLoadCallback}\n        mapStyle=\"mapbox://styles/mapbox/light-v10\"\n        // mapStyle={null}\n        ref={mapRef}\n      >\n        {databaseTableNames.map((name) => (\n          <Source\n            type=\"vector\"\n            tiles={[\n              `${process.env.REACT_APP_OSM_API_BACKEND_URL}/${name}.mvt?limit=10000&bbox={bbox-epsg-3857}&epsg=3857`,\n            ]}\n            id={name}\n            key={name}\n          />\n        ))}\n        {layers?.map((layer) => (\n          <Layer key={layer.id} {...(layer as any)} />\n        ))}\n        {latitude && longitude && featureIds.length > 0 && (\n          <FeatureListPopup\n            featureIds={featureIds}\n            latitude={Number.parseFloat(latitude)}\n            longitude={Number.parseFloat(longitude)}\n            onClose={closePopup}\n          />\n        )}\n        <ZoomToDataOnLoad />\n        <NavigationControl style={{ right: \"1rem\", top: \"1rem\" }} />\n      </ReactMapGL>\n      {props.children}\n    </OverflowScrollContainer>\n  );\n}\n","import { Location } from \"history\";\nimport { uniq } from \"lodash\";\nimport { FeatureId } from \"../../model/Feature\";\n\nexport default function useFeatureIdsFromLocation(location: Location) {\n  const match = location.pathname.match(/^\\/(\\w+)\\/([\\w,:-]+)/);\n  let featureIds: FeatureId[] = [];\n  if (match && typeof match[1] === \"string\" && typeof match[2] === \"string\") {\n    const featureIdString = match[2];\n    if (match[1] === \"composite\") {\n      const components = uniq(featureIdString.split(\",\").sort());\n      featureIds = components.map((s) => {\n        const [source, id] = s.split(\":\");\n        return { source, id };\n      });\n    } else {\n      featureIds = [{ source: match[1], id: featureIdString }];\n    }\n  }\n  return featureIds;\n}\n","import {\n  FocusStyleManager,\n  HotkeysProvider,\n  HotkeysTarget2,\n} from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport BlueprintDarkModeContainer from \"./core/BlueprintDarkModeContainer\";\nimport composeContexts, { ContextAndValue } from \"./core/composeContexts\";\nimport { useGlobalHotkeys } from \"./hooks/useGlobalHotkeys\";\nimport { Legend } from \"./Legend\";\nimport MapView from \"./map/MapView\";\nimport OverflowScrollContainer from \"./OverflowScrollContainer\";\n\nFocusStyleManager.onlyShowFocusOnTabs();\n\nconst AppBody = styled.div`\n  flex: 1;\n  overflow: hidden;\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n`;\n\nfunction App() {\n  // const { viewMenuButton, viewOptions } = useViewOptionsButton();\n  // const isDarkMode = useDarkMode();\n  // The panel showing the Linked Data vocabulary graph\n\n  const contexts: ContextAndValue<any>[] = [\n    // [RDFGraphContext, rdfStore],\n  ];\n  const history = useHistory();\n  const location = useLocation();\n\n  const onSelectFeature = React.useCallback<(_id: string) => void>(\n    (_id) => {\n      const url = `/features/${_id}`;\n      history.push(`${url}${location.search}`);\n    },\n    [history, location]\n  );\n\n  const sidebar = (\n    <OverflowScrollContainer\n      style={{ width: \"400px\", padding: \"1rem\", margin: \"0\" }}\n    >\n      <h1>Miki: Erforsche deinen Kiez</h1>\n      <Legend />\n    </OverflowScrollContainer>\n  );\n\n  const mapView = (\n    <MapView\n      featureId={undefined}\n      onSelectFeature={onSelectFeature}\n      visible={true}\n    />\n  );\n\n  const navbarAndBody = (\n    <>\n      <AppBody>\n        {/* {sidebar} */}\n        {mapView}\n      </AppBody>\n    </>\n  );\n\n  const hotkeys = useGlobalHotkeys();\n  return (\n    <HotkeysProvider>\n      <HotkeysTarget2 hotkeys={hotkeys}>\n        {({ handleKeyDown, handleKeyUp }) => (\n          <BlueprintDarkModeContainer\n            style={{\n              height: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n            onKeyDown={handleKeyDown}\n            onKeyUp={handleKeyUp}\n          >\n            {composeContexts(contexts, navbarAndBody)}\n          </BlueprintDarkModeContainer>\n        )}\n      </HotkeysTarget2>\n    </HotkeysProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\n\nexport function useGlobalHotkeys() {\n  return React.useMemo(\n    () => [\n      {\n        combo: \"mod+z\",\n        global: true,\n        label: \"Undo\",\n        onKeyDown: () => {\n          alert(\"!!\");\n        },\n        allowInInput: false,\n        preventDefault: true,\n      },\n      {\n        global: true,\n        combo: \"mod+shift+z\",\n        label: \"Redo\",\n        onKeyDown: () => {\n          alert(\"!!\");\n        },\n        allowInInput: false,\n        preventDefault: true,\n      },\n    ],\n    []\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import dotenv from \"dotenv\";\nimport { enableAllPlugins, enablePatches } from \"immer\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\ndotenv.config();\nenableAllPlugins();\nenablePatches();\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}